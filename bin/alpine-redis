#!/bin/sh
# <UDF name="FQDN" label="The hostname for the new Linode." />
# <UDF name="AWS_ACCESS_KEY_ID" Label="AWS API Key ID" />
# <UDF name="AWS_SECRET_ACCESS_KEY" Label="AWS Secret Access Key" />
# <UDF name="AWS_REGION" Label="AWS Region" />
# <UDF name="REDIS_PASSWORD" Label="redis root user password" />
# <UDF name="REDIS_PORT" Label="redis port" />

set -ex
exec >/root/stackscript.log 2>&1
echo "Linode Variable Values:  LINODE_ID: $LINODE_ID,  LINODE_LISHUSERNAME: $LINODE_LISHUSERNAME,  LINODE_RAM: $LINODE_RAM,  LINODE_DATACENTERID:$LINODE_DATACENTERID"
source <ssinclude StackScriptID="931877">

function add_packages() {
    echo "Adding packages..."
    apk add --update ca-certificates openssl lsof procps redis
    update-ca-certificates --fresh
}
function setup_aws() {
    install_awscli
    echo "Setup awscli..."
    mkdir ~/.aws
  cat > ~/.aws/config <<CONFIG
[default]
region = ${AWS_REGION}
CONFIG
  cat > ~/.aws/credentials <<CREDS
[default]
aws_access_key_id = ${AWS_ACCESS_KEY_ID}
aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
CREDS
    # Test AWS Credentials stored in Env vars
    echo $(aws sts get-caller-identity)
}
function redis_configure() {
    [ ! -n "$1" ] && {
        printf "redis_configure() requires the redis_password as its first argument\n"
        return 1;
    }
    local redis_password="$1"
    local conf_path=${2:-/etc/redis/custom.cnf}
    echo "Configuring redis..."
    rc-update add redis default
    rc-service redis start
    netstat -tulpn
}
function install() {
    harden_ssh
    cat << EOT > /etc/ssh/banner
 _____      _       _       _ __
/__   \_ __(_)_   _(_) __ _| / _\ ___  ___
  / /\/ '__| \ \ / / |/ _\` | \ \ / _ \/ __|
 / /  | |  | |\ V /| | (_| | |\ \  __/ (__
 \/   |_|  |_| \_/ |_|\__,_|_\__/\___|\___|
EOT
    export PATH="$PATH:/root/.local/bin"
    echo 'export PATH="$PATH:/root/.local/bin"' >> ~/.profile
    echo -e "/sbin/ifconfig eth0 | awk '/inet / { print \$2 }' | sed 's/addr://'\necho\nw\necho\niostat\necho\nmpstat\necho\ndf\necho\nfree\necho\nnetstat -tulpn" >> ~/.profile
    setup_swap ${LINODE_RAM}
    setup_hostname ${FQDN}
    setup_timezone UTC
    patch_os
    enable_auto_updates
    enable_fail2ban
    add_packages
    setup_aws
    redis_configure ${REDIS_PASSWORD}
    setup_firewall $(network_interface) 22 ${REDIS_PORT}
    echo "Stackscript finished"

}

install
rc-status
stackscript_cleanup
echo $(date +'%F') > /root/.deployed
echo "Installation complete!"
